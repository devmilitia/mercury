-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Feb 16, 2025 at 10:20 AM
-- Server version: 10.11.10-MariaDB-cll-lve
-- PHP Version: 8.3.15

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `ventason_mercury_demo`
--

-- --------------------------------------------------------

--
-- Table structure for table `admin`
--

CREATE TABLE `admin` (
  `id` tinyint(4) NOT NULL,
  `usuario` varchar(50) NOT NULL,
  `clave` varchar(500) NOT NULL,
  `ip` varchar(15) NOT NULL,
  `permiso` char(1) NOT NULL,
  `fecha` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `admin`
--

INSERT INTO `admin` (`id`, `usuario`, `clave`, `ip`, `permiso`, `fecha`) VALUES
(1, 'prueba', 'ebb813c514ef4f12bc130b0c28723b7c', '127.0.0.1', '1', '2025-02-05 09:32:24');

-- --------------------------------------------------------

--
-- Table structure for table `editores`
--

CREATE TABLE `editores` (
  `id` int(7) NOT NULL,
  `id_grapesjs` varchar(100) NOT NULL,
  `nombre` varchar(100) NOT NULL,
  `contenido_grapesjs` longtext DEFAULT NULL,
  `contenido_html` longtext DEFAULT NULL,
  `filtro` varchar(100) DEFAULT NULL,
  `indice` varchar(10) DEFAULT NULL,
  `email` varchar(200) DEFAULT NULL,
  `asunto` varchar(200) DEFAULT NULL,
  `fecha` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `editores`
--

INSERT INTO `editores` (`id`, `id_grapesjs`, `nombre`, `contenido_grapesjs`, `contenido_html`, `filtro`, `indice`, `email`, `asunto`, `fecha`) VALUES
(1, 'nVo9Dq4t7G', 'prueba', 'PG1qbWw+PG1qLWJvZHkgaWQ9ImliMmkiPjxtai1zZWN0aW9uIGJhY2tncm91bmQtY29sb3I9IiNmMGYwZjAiIGlkPSJpNXBpIj48bWotY29sdW1uIGlkPSJpdHlqIj48bWotdGV4dCBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMjBweCIgY29sb3I9IiM2MjYyNjIiIGlkPSJpdmN2Ij4gICAgICAgIE15IENvbXBhbnkgICAgICA8L21qLXRleHQ+PC9tai1jb2x1bW4+PC9tai1zZWN0aW9uPjxtai1zZWN0aW9uIGJhY2tncm91bmQtdXJsPSJodHRwczovL2kucG9zdGltZy5jYy9uaDh3WDlwVi9BUk1ZLUVOR0xJU0guanBnIiBiYWNrZ3JvdW5kLXNpemU9ImNvdmVyIiBiYWNrZ3JvdW5kLXJlcGVhdD0ibm8tcmVwZWF0IiBpZD0iaTdhZiI+PG1qLWNvbHVtbiBpZD0iaWF5bCI+PG1qLXRleHQgYWxpZ249ImNlbnRlciIgY29sb3I9IiNmZmYiIGZvbnQtc2l6ZT0iNDBweCIgZm9udC1mYW1pbHk9IkhlbHZldGljYSBOZXVlIiBpZD0iaWdwMSI+U2xvZ2FuIGhlcmUgICAgICA8L21qLXRleHQ+PG1qLWJ1dHRvbiBiYWNrZ3JvdW5kLWNvbG9yPSIjRjYzQTREIiBocmVmPSIjIiBpZD0iaWFlczIiPiAgICAgICAgUHJvbW90aW9uICAgICAgPC9tai1idXR0b24+PC9tai1jb2x1bW4+PC9tai1zZWN0aW9uPjxtai1zZWN0aW9uIGJhY2tncm91bmQtY29sb3I9IiNmYWZhZmEiIGlkPSJpdzlmMSI+PG1qLWNvbHVtbiB3aWR0aD0iNDAwcHgiIGlkPSJpYjJ3ZCI+PG1qLXRleHQgZm9udC1zdHlsZT0iaXRhbGljIiBmb250LXNpemU9IjIwcHgiIGZvbnQtZmFtaWx5PSJIZWx2ZXRpY2EgTmV1ZSIgY29sb3I9IiM2MjYyNjIiIGlkPSJpZTY0dyI+TXkgQXdlc29tZSBUZXh0IHRlc3QgNzc3PC9tai10ZXh0Pjxtai10ZXh0IGNvbG9yPSIjNTI1MjUyIiBpZD0iaWU1c2EiPiAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gUHJvaW4gcnV0cnVtIGVuaW0gZWdldCBtYWduYSBlZmZpY2l0dXIsIGV1IHNlbXBlciBhdWd1ZSBzZW1wZXIuIEFsaXF1YW0gZXJhdCB2b2x1dHBhdC4gQ3JhcyBpZCBkdWkgbGVjdHVzLiBWZXN0aWJ1bHVtIHNlZCBmaW5pYnVzIGxlY3R1cywgc2l0IGFtZXQgc3VzY2lwaXQgbmliaC4gUHJvaW4gbmVjIGNvbW1vZG8gcHVydXMuIFNlZCBlZ2V0ICAgICAgICBudWxsYSBlbGl0LiBOdWxsYSBhbGlxdWV0IG1vbGxpcyBmYXVjaWJ1cy4gICAgICA8L21qLXRleHQ+PG1qLWJ1dHRvbiBiYWNrZ3JvdW5kLWNvbG9yPSIjRjQ1RTQzIiBocmVmPSIjIiBpZD0iaW9laDkiPkxlYXJuIG1vcmUgICAgICA8L21qLWJ1dHRvbj48L21qLWNvbHVtbj48L21qLXNlY3Rpb24+PG1qLXdyYXBwZXIgYm9yZGVyPSIxcHggc29saWQgIzAwMDAwMCIgcGFkZGluZz0iNTBweCAzMHB4IiBpZD0iaXA4bmEiPjxtai1zZWN0aW9uIGJvcmRlci10b3A9IjFweCBzb2xpZCAjYWFhYWFhIiBib3JkZXItbGVmdD0iMXB4IHNvbGlkICNhYWFhYWEiIGJvcmRlci1yaWdodD0iMXB4IHNvbGlkICNhYWFhYWEiIHBhZGRpbmc9IjIwcHgiIGlkPSJpanVhNyI+PG1qLWNvbHVtbiBpZD0iaWczNmsiPjxtai1pbWFnZSBwYWRkaW5nPSIwIiBzcmM9Imh0dHBzOi8vdmlhLnBsYWNlaG9sZGVyLmNvbS8zNTB4MjUwLzc4YzVkNi9mZmYiIGlkPSJpbG1vZiI+ICAgICAgICA8L21qLWltYWdlPjwvbWotY29sdW1uPjwvbWotc2VjdGlvbj48bWotc2VjdGlvbiBib3JkZXItbGVmdD0iMXB4IHNvbGlkICNhYWFhYWEiIGJvcmRlci1yaWdodD0iMXB4IHNvbGlkICNhYWFhYWEiIHBhZGRpbmc9IjIwcHgiIGJvcmRlci1ib3R0b209IjFweCBzb2xpZCAjYWFhYWFhIiBpZD0iaTN5bGkiPjxtai1jb2x1bW4gYm9yZGVyPSIxcHggc29saWQgI2RkZGRkZCIgaWQ9ImljZDJ2Ij48bWotdGV4dCBwYWRkaW5nPSIyMHB4IiBpZD0iaXJxMmsiPiBGaXJzdCBsaW5lIG9mIHRleHQgICAgICAgICA8L21qLXRleHQ+PG1qLWRpdmlkZXIgYm9yZGVyLXdpZHRoPSIxcHgiIGJvcmRlci1zdHlsZT0iZGFzaGVkIiBib3JkZXItY29sb3I9ImxpZ2h0Z3JleSIgcGFkZGluZz0iMCAyMHB4IiBpZD0iaWlmcmkiPjxtai10ZXh0IHBhZGRpbmc9IjIwcHgiIGlkPSJpbnZocSI+IFNlY29uZCBsaW5lIG9mIHRleHQgICAgICAgICAgIDwvbWotdGV4dD48L21qLWRpdmlkZXI+PC9tai1jb2x1bW4+PC9tai1zZWN0aW9uPjwvbWotd3JhcHBlcj48bWotcmF3PjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0MSIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDIiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQzIiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0NCIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDUiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQ2IiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PC9kaXY+PC9tai1yYXc+PG1qLXJhdz48ZGl2IGNsYXNzPSJjb250YWluZXIiPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDEiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQyIiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0MyIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDQiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQ1IiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0NiIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjwvZGl2PjwvbWotcmF3Pjxtai1zZWN0aW9uIGJhY2tncm91bmQtY29sb3I9IndoaXRlIiBpZD0iaXl0NzQiPjxtai1jb2x1bW4gaWQ9Iml5ajdmIj48bWotaW1hZ2Ugd2lkdGg9IjIwMHB4IiBzcmM9Imh0dHBzOi8vZGVzaWduc3BlbGwuZmlsZXMud29yZHByZXNzLmNvbS8yMDEyLzAxL3NjaW9saW5vLXBhcmlzLWJ3LmpwZyIgaWQ9ImlwdzljIj4gICAgICA8L21qLWltYWdlPjwvbWotY29sdW1uPjxtai1jb2x1bW4gaWQ9Iml1ZzhrIj48bWotdGV4dCBmb250LXN0eWxlPSJpdGFsaWMiIGZvbnQtc2l6ZT0iMjBweCIgZm9udC1mYW1pbHk9IkhlbHZldGljYSBOZXVlIiBjb2xvcj0iIzYyNjI2MiIgaWQ9ImllZTFsIj4gICAgICAgIEZpbmQgYW1hemluZyBwbGFjZXMgICAgICA8L21qLXRleHQ+PG1qLXRleHQgY29sb3I9IiM1MjUyNTIiIGlkPSJpZW1sciI+ICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBQcm9pbiBydXRydW0gZW5pbSBlZ2V0IG1hZ25hIGVmZmljaXR1ciwgZXUgc2VtcGVyIGF1Z3VlIHNlbXBlci4gQWxpcXVhbSBlcmF0IHZvbHV0cGF0LiBDcmFzIGlkIGR1aSBsZWN0dXMuIFZlc3RpYnVsdW0gc2VkIGZpbmlidXMgbGVjdHVzLiAgICAgIDwvbWotdGV4dD48L21qLWNvbHVtbj48L21qLXNlY3Rpb24+PG1qLXNlY3Rpb24gYmFja2dyb3VuZC1jb2xvcj0iI2ZiZmJmYiIgaWQ9ImlyZXRoIj48bWotY29sdW1uIGlkPSJpZXg0byI+PG1qLWltYWdlIHdpZHRoPSIxMDBweCIgc3JjPSIvLzE5MW4ubWouYW0vaW1nLzE5MW4vM3MveDBsLnBuZyIgaWQ9Iml2ZmxsIj4gICAgICA8L21qLWltYWdlPjwvbWotY29sdW1uPjxtai1jb2x1bW4gaWQ9ImlwbXo0Ij48bWotaW1hZ2Ugd2lkdGg9IjEwMHB4IiBzcmM9Ii8vMTkxbi5tai5hbS9pbWcvMTkxbi8zcy94MDEucG5nIiBpZD0iaXRja2YiPiAgICAgIDwvbWotaW1hZ2U+PC9tai1jb2x1bW4+PG1qLWNvbHVtbiBpZD0iaWdnbWgiPjxtai1pbWFnZSB3aWR0aD0iMTAwcHgiIHNyYz0iLy8xOTFuLm1qLmFtL2ltZy8xOTFuLzNzL3gwcy5wbmciIGlkPSJpeHR3dSI+ICAgICAgPC9tai1pbWFnZT48L21qLWNvbHVtbj48L21qLXNlY3Rpb24+PG1qLXNlY3Rpb24gYmFja2dyb3VuZC1jb2xvcj0iI2U3ZTdlNyIgaWQ9ImlqbzNhIj48bWotY29sdW1uIGlkPSJpMnM5aCI+PG1qLWJ1dHRvbiBocmVmPSIjIiBpZD0iaWp5dmYiPkhlbGxvIFRoZXJlISAgICAgIDwvbWotYnV0dG9uPjxtai1zb2NpYWwgZm9udC1zaXplPSIxNXB4IiBpY29uLXNpemU9IjMwcHgiIG1vZGU9Imhvcml6b250YWwiIGlkPSJpYXB5aSI+PG1qLXNvY2lhbC1lbGVtZW50IG5hbWU9ImZhY2Vib29rIiBocmVmPSJodHRwczovL21qbWwuaW8vIiBpZD0iaXhnczciPiAgICAgICAgICBGYWNlYm9vayAgICAgICAgPC9tai1zb2NpYWwtZWxlbWVudD48bWotc29jaWFsLWVsZW1lbnQgbmFtZT0iZ29vZ2xlIiBocmVmPSJodHRwczovL21qbWwuaW8vIiBpZD0iaWZvamsiPiAgICAgICAgICBHb29nbGUgICAgICAgIDwvbWotc29jaWFsLWVsZW1lbnQ+PG1qLXNvY2lhbC1lbGVtZW50IG5hbWU9InR3aXR0ZXIiIGhyZWY9Imh0dHBzOi8vbWptbC5pby8iIGlkPSJpdWFzZiI+ICAgICAgICAgIFR3aXR0ZXIgICAgICAgIDwvbWotc29jaWFsLWVsZW1lbnQ+PC9tai1zb2NpYWw+PC9tai1jb2x1bW4+PC9tai1zZWN0aW9uPjwvbWotYm9keT48L21qbWw+', 'PCFkb2N0eXBlIGh0bWw+PGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbG5zOnY9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206dm1sIiB4bWxuczpvPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOm9mZmljZTpvZmZpY2UiPiAgPGhlYWQ+ICAgIDx0aXRsZT4gICAgICAgICAgPC90aXRsZT4gICAgPCEtLVtpZiAhbXNvXT48IS0tPiAgICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPiAgICA8IS0tPCFbZW5kaWZdLS0+ICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4gICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xIj4gICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4gICAgICAjb3V0bG9vayBhIHsgcGFkZGluZzowOyB9ICAgICAgYm9keSB7IG1hcmdpbjowO3BhZGRpbmc6MDstd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6MTAwJTstbXMtdGV4dC1zaXplLWFkanVzdDoxMDAlOyB9ICAgICAgdGFibGUsIHRkIHsgYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO21zby10YWJsZS1sc3BhY2U6MHB0O21zby10YWJsZS1yc3BhY2U6MHB0OyB9ICAgICAgaW1nIHsgYm9yZGVyOjA7aGVpZ2h0OmF1dG87bGluZS1oZWlnaHQ6MTAwJTsgb3V0bGluZTpub25lO3RleHQtZGVjb3JhdGlvbjpub25lOy1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6YmljdWJpYzsgfSAgICAgIHAgeyBkaXNwbGF5OmJsb2NrO21hcmdpbjoxM3B4IDA7IH0gICAgPC9zdHlsZT4gICAgPCEtLVtpZiBtc29dPiAgICA8bm9zY3JpcHQ+ICAgIDx4bWw+ICAgIDxvOk9mZmljZURvY3VtZW50U2V0dGluZ3M+ICAgICAgPG86QWxsb3dQTkcvPiAgICAgIDxvOlBpeGVsc1BlckluY2g+OTY8L286UGl4ZWxzUGVySW5jaD4gICAgPC9vOk9mZmljZURvY3VtZW50U2V0dGluZ3M+ICAgIDwveG1sPiAgICA8L25vc2NyaXB0PiAgICA8IVtlbmRpZl0tLT4gICAgPCEtLVtpZiBsdGUgbXNvIDExXT4gICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4gICAgICAubWotb3V0bG9vay1ncm91cC1maXggeyB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7IH0gICAgPC9zdHlsZT4gICAgPCFbZW5kaWZdLS0+ICAgICAgICAgIDwhLS1baWYgIW1zb10+PCEtLT4gICAgICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHU6MzAwLDQwMCw1MDAsNzAwIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIj4gICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+ICAgICAgICAgIEBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1VYnVudHU6MzAwLDQwMCw1MDAsNzAwKTsgICAgICAgIDwvc3R5bGU+ICAgICAgPCEtLTwhW2VuZGlmXS0tPiAgICAgICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+ICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ4MHB4KSB7ICAgICAgICAubWotY29sdW1uLXBlci0xMDAgeyB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7IG1heC13aWR0aDogMTAwJTsgfS5tai1jb2x1bW4tcHgtNDAwIHsgd2lkdGg6NDAwcHggIWltcG9ydGFudDsgbWF4LXdpZHRoOiA0MDBweDsgfS5tai1jb2x1bW4tcGVyLTUwIHsgd2lkdGg6NTAlICFpbXBvcnRhbnQ7IG1heC13aWR0aDogNTAlOyB9Lm1qLWNvbHVtbi1wZXItMzMtMzMzMzMzMzMzMzMzMzM2IHsgd2lkdGg6MzMuMzMzMzMzMzMzMzMzMzM2JSAhaW1wb3J0YW50OyBtYXgtd2lkdGg6IDMzLjMzMzMzMzMzMzMzMzMzNiU7IH0gICAgICB9ICAgIDwvc3R5bGU+ICAgIDxzdHlsZSBtZWRpYT0ic2NyZWVuIGFuZCAobWluLXdpZHRoOjQ4MHB4KSI+ICAgICAgLm1vei10ZXh0LWh0bWwgLm1qLWNvbHVtbi1wZXItMTAwIHsgd2lkdGg6MTAwJSAhaW1wb3J0YW50OyBtYXgtd2lkdGg6IDEwMCU7IH0ubW96LXRleHQtaHRtbCAubWotY29sdW1uLXB4LTQwMCB7IHdpZHRoOjQwMHB4ICFpbXBvcnRhbnQ7IG1heC13aWR0aDogNDAwcHg7IH0ubW96LXRleHQtaHRtbCAubWotY29sdW1uLXBlci01MCB7IHdpZHRoOjUwJSAhaW1wb3J0YW50OyBtYXgtd2lkdGg6IDUwJTsgfS5tb3otdGV4dC1odG1sIC5tai1jb2x1bW4tcGVyLTMzLTMzMzMzMzMzMzMzMzMzNiB7IHdpZHRoOjMzLjMzMzMzMzMzMzMzMzMzNiUgIWltcG9ydGFudDsgbWF4LXdpZHRoOiAzMy4zMzMzMzMzMzMzMzMzMzYlOyB9ICAgIDwvc3R5bGU+ICAgICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+ICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjQ4MHB4KSB7ICAgICAgdGFibGUubWotZnVsbC13aWR0aC1tb2JpbGUgeyB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9ICAgICAgdGQubWotZnVsbC13aWR0aC1tb2JpbGUgeyB3aWR0aDogYXV0byAhaW1wb3J0YW50OyB9ICAgIH0gICAgICA8L3N0eWxlPiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPiAgICAgICAgPC9zdHlsZT4gICAgICA8L2hlYWQ+ICA8Ym9keSBzdHlsZT0id29yZC1zcGFjaW5nOm5vcm1hbDsiPiAgICAgICAgICAgICAgPGRpdiAgICAgICAgIHN0eWxlPSIiICAgICAgPiAgICAgICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0iIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHdpZHRoPSI2MDAiIGJnY29sb3I9IiNmMGYwZjAiID48dHI+PHRkIHN0eWxlPSJsaW5lLWhlaWdodDowcHg7Zm9udC1zaXplOjBweDttc28tbGluZS1oZWlnaHQtcnVsZTpleGFjdGx5OyI+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgIDxkaXYgIHN0eWxlPSJiYWNrZ3JvdW5kOiNmMGYwZjA7YmFja2dyb3VuZC1jb2xvcjojZjBmMGYwO21hcmdpbjowcHggYXV0bzttYXgtd2lkdGg6NjAwcHg7Ij4gICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYmFja2dyb3VuZDojZjBmMGYwO2JhY2tncm91bmQtY29sb3I6I2YwZjBmMDt3aWR0aDoxMDAlOyIgICAgICAgID4gICAgICAgICAgPHRib2R5PiAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgc3R5bGU9ImRpcmVjdGlvbjpsdHI7Zm9udC1zaXplOjBweDtwYWRkaW5nOjIwcHggMDt0ZXh0LWFsaWduOmNlbnRlcjsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NjAwcHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7IiAgICAgID4gICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgICAgYWxpZ249ImxlZnQiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICAgICAgICAgc3R5bGU9ImZvbnQtZmFtaWx5OlVidW50dSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtmb250LXNpemU6MjBweDtmb250LXN0eWxlOml0YWxpYztsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246bGVmdDtjb2xvcjojNjI2MjYyOyIgICAgICA+TXkgQ29tcGFueTwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgIDwvdHI+ICAgICAgICAgIDwvdGJvZHk+ICAgICAgICA8L3RhYmxlPiAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9IiIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0id2lkdGg6NjAwcHg7IiB3aWR0aD0iNjAwIiA+PHRyPjx0ZCBzdHlsZT0ibGluZS1oZWlnaHQ6MHB4O2ZvbnQtc2l6ZTowcHg7bXNvLWxpbmUtaGVpZ2h0LXJ1bGU6ZXhhY3RseTsiPjx2OnJlY3Qgc3R5bGU9IndpZHRoOjYwMHB4OyIgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiIGZpbGw9InRydWUiIHN0cm9rZT0iZmFsc2UiPjx2OmZpbGwgb3JpZ2luPSIwLCAtMC41IiBwb3NpdGlvbj0iMCwgLTAuNSIgc3JjPSJodHRwczovL2kucG9zdGltZy5jYy9uaDh3WDlwVi9BUk1ZLUVOR0xJU0guanBnIiB0eXBlPSJmcmFtZSIgc2l6ZT0iMSwxIiBhc3BlY3Q9ImF0bGVhc3QiIC8+PHY6dGV4dGJveCBzdHlsZT0ibXNvLWZpdC1zaGFwZS10by10ZXh0OnRydWUiIGluc2V0PSIwLDAsMCwwIj48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgPGRpdiAgc3R5bGU9ImJhY2tncm91bmQ6dXJsKCdodHRwczovL2kucG9zdGltZy5jYy9uaDh3WDlwVi9BUk1ZLUVOR0xJU0guanBnJykgY2VudGVyIHRvcCAvIGNvdmVyIG5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciB0b3A7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtc2l6ZTpjb3ZlcjttYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjYwMHB4OyI+ICAgICAgICA8ZGl2ICBzdHlsZT0ibGluZS1oZWlnaHQ6MDtmb250LXNpemU6MDsiPiAgICAgICAgPHRhYmxlICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBiYWNrZ3JvdW5kPSJodHRwczovL2kucG9zdGltZy5jYy9uaDh3WDlwVi9BUk1ZLUVOR0xJU0guanBnIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYmFja2dyb3VuZDp1cmwoJ2h0dHBzOi8vaS5wb3N0aW1nLmNjL25oOHdYOXBWL0FSTVktRU5HTElTSC5qcGcnKSBjZW50ZXIgdG9wIC8gY292ZXIgbm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIHRvcDtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1zaXplOmNvdmVyO3dpZHRoOjEwMCU7IiAgICAgICAgPiAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICBzdHlsZT0iZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweCAwO3RleHQtYWxpZ246Y2VudGVyOyIgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIHJvbGU9InByZXNlbnRhdGlvbiIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPjx0cj48dGQgY2xhc3M9IiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDo2MDBweDsiID48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgICA8ZGl2ICAgICAgICAgY2xhc3M9Im1qLWNvbHVtbi1wZXItMTAwIG1qLW91dGxvb2stZ3JvdXAtZml4IiBzdHlsZT0iZm9udC1zaXplOjBweDt0ZXh0LWFsaWduOmxlZnQ7ZGlyZWN0aW9uOmx0cjtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MTAwJTsiICAgICAgPiAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDsiIHdpZHRoPSIxMDAlIiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7IiAgICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIHN0eWxlPSJmb250LWZhbWlseTpIZWx2ZXRpY2EgTmV1ZTtmb250LXNpemU6NDBweDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246Y2VudGVyO2NvbG9yOiNmZmZmZmY7IiAgICAgID5TbG9nYW4gaGVyZTwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiB2ZXJ0aWNhbC1hbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7IiAgICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJvcmRlci1jb2xsYXBzZTpzZXBhcmF0ZTtsaW5lLWhlaWdodDoxMDAlOyIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgIDx0cj4gICAgICAgICAgICA8dGQgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBiZ2NvbG9yPSIjRjYzQTREIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOjNweDtjdXJzb3I6YXV0bzttc28tcGFkZGluZy1hbHQ6MTBweCAyNXB4O2JhY2tncm91bmQ6I0Y2M0E0RDsiIHZhbGlnbj0ibWlkZGxlIiAgICAgICAgICAgID4gICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICBocmVmPSIjIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7YmFja2dyb3VuZDojRjYzQTREO2NvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6VWJ1bnR1LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtd2VpZ2h0Om5vcm1hbDtsaW5lLWhlaWdodDoxMjAlO21hcmdpbjowO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtdHJhbnNmb3JtOm5vbmU7cGFkZGluZzoxMHB4IDI1cHg7bXNvLXBhZGRpbmctYWx0OjBweDtib3JkZXItcmFkaXVzOjNweDsiIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICBQcm9tb3Rpb24gICAgICAgICAgICAgIDwvYT4gICAgICAgICAgICA8L3RkPiAgICAgICAgICA8L3RyPiAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgIDwvdHI+ICAgICAgICAgIDwvdGJvZHk+ICAgICAgICA8L3RhYmxlPiAgICAgICAgPC9kaXY+ICAgICAgPC9kaXY+ICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC92OnRleHRib3g+PC92OnJlY3Q+PC90ZD48L3RyPjwvdGFibGU+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0iIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHdpZHRoPSI2MDAiIGJnY29sb3I9IiNmYWZhZmEiID48dHI+PHRkIHN0eWxlPSJsaW5lLWhlaWdodDowcHg7Zm9udC1zaXplOjBweDttc28tbGluZS1oZWlnaHQtcnVsZTpleGFjdGx5OyI+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgIDxkaXYgIHN0eWxlPSJiYWNrZ3JvdW5kOiNmYWZhZmE7YmFja2dyb3VuZC1jb2xvcjojZmFmYWZhO21hcmdpbjowcHggYXV0bzttYXgtd2lkdGg6NjAwcHg7Ij4gICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYmFja2dyb3VuZDojZmFmYWZhO2JhY2tncm91bmQtY29sb3I6I2ZhZmFmYTt3aWR0aDoxMDAlOyIgICAgICAgID4gICAgICAgICAgPHRib2R5PiAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgc3R5bGU9ImRpcmVjdGlvbjpsdHI7Zm9udC1zaXplOjBweDtwYWRkaW5nOjIwcHggMDt0ZXh0LWFsaWduOmNlbnRlcjsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NDAwcHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcHgtNDAwIG1qLW91dGxvb2stZ3JvdXAtZml4IiBzdHlsZT0iZm9udC1zaXplOjBweDt0ZXh0LWFsaWduOmxlZnQ7ZGlyZWN0aW9uOmx0cjtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MTAwJTsiICAgICAgPiAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDsiIHdpZHRoPSIxMDAlIiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0ibGVmdCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBzdHlsZT0iZm9udC1mYW1pbHk6SGVsdmV0aWNhIE5ldWU7Zm9udC1zaXplOjIwcHg7Zm9udC1zdHlsZTppdGFsaWM7bGluZS1oZWlnaHQ6MTt0ZXh0LWFsaWduOmxlZnQ7Y29sb3I6IzYyNjI2MjsiICAgICAgPk15IEF3ZXNvbWUgVGV4dCB0ZXN0IDc3NzwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0ibGVmdCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBzdHlsZT0iZm9udC1mYW1pbHk6VWJ1bnR1LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE7dGV4dC1hbGlnbjpsZWZ0O2NvbG9yOiM1MjUyNTI7IiAgICAgID5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZyBlbGl0LiBQcm9pbiBydXRydW0gZW5pbSBlZ2V0IG1hZ25hIGVmZmljaXR1ciwgZXUgc2VtcGVyIGF1Z3VlIHNlbXBlci4gQWxpcXVhbSBlcmF0IHZvbHV0cGF0LiBDcmFzIGlkIGR1aSBsZWN0dXMuIFZlc3RpYnVsdW0gc2VkIGZpbmlidXMgbGVjdHVzLCBzaXQgYW1ldCBzdXNjaXBpdCBuaWJoLiBQcm9pbiBuZWMgY29tbW9kbyBwdXJ1cy4gU2VkIGVnZXQgICAgICAgIG51bGxhIGVsaXQuIE51bGxhIGFsaXF1ZXQgbW9sbGlzIGZhdWNpYnVzLjwvZGl2PiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiB2ZXJ0aWNhbC1hbGlnbj0ibWlkZGxlIiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7IiAgICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJvcmRlci1jb2xsYXBzZTpzZXBhcmF0ZTtsaW5lLWhlaWdodDoxMDAlOyIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgIDx0cj4gICAgICAgICAgICA8dGQgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBiZ2NvbG9yPSIjRjQ1RTQzIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOjNweDtjdXJzb3I6YXV0bzttc28tcGFkZGluZy1hbHQ6MTBweCAyNXB4O2JhY2tncm91bmQ6I0Y0NUU0MzsiIHZhbGlnbj0ibWlkZGxlIiAgICAgICAgICAgID4gICAgICAgICAgICAgIDxhICAgICAgICAgICAgICAgICBocmVmPSIjIiBzdHlsZT0iZGlzcGxheTppbmxpbmUtYmxvY2s7YmFja2dyb3VuZDojRjQ1RTQzO2NvbG9yOiNmZmZmZmY7Zm9udC1mYW1pbHk6VWJ1bnR1LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxM3B4O2ZvbnQtd2VpZ2h0Om5vcm1hbDtsaW5lLWhlaWdodDoxMjAlO21hcmdpbjowO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtdHJhbnNmb3JtOm5vbmU7cGFkZGluZzoxMHB4IDI1cHg7bXNvLXBhZGRpbmctYWx0OjBweDtib3JkZXItcmFkaXVzOjNweDsiIHRhcmdldD0iX2JsYW5rIiAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICBMZWFybiBtb3JlICAgICAgICAgICAgICA8L2E+ICAgICAgICAgICAgPC90ZD4gICAgICAgICAgPC90cj4gICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICA8L3RyPiAgICAgICAgICA8L3Rib2R5PiAgICAgICAgPC90YWJsZT4gICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSIiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgPGRpdiAgc3R5bGU9Im1hcmdpbjowcHggYXV0bzttYXgtd2lkdGg6NjAwcHg7Ij4gICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0id2lkdGg6MTAwJTsiICAgICAgICA+ICAgICAgICAgIDx0Ym9keT4gICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6MXB4IHNvbGlkICMwMDAwMDA7ZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6NTBweCAzMHB4O3RleHQtYWxpZ246Y2VudGVyOyIgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIHJvbGU9InByZXNlbnRhdGlvbiIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPjx0cj48dGQgY2xhc3M9IiIgd2lkdGg9IjYwMHB4IiA+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0iIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDo1MzhweDsiIHdpZHRoPSI1MzgiID48dHI+PHRkIHN0eWxlPSJsaW5lLWhlaWdodDowcHg7Zm9udC1zaXplOjBweDttc28tbGluZS1oZWlnaHQtcnVsZTpleGFjdGx5OyI+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgIDxkaXYgIHN0eWxlPSJtYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjUzOHB4OyI+ICAgICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgICAgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjEwMCU7IiAgICAgICAgPiAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICNhYWFhYWE7Ym9yZGVyLXJpZ2h0OjFweCBzb2xpZCAjYWFhYWFhO2JvcmRlci10b3A6MXB4IHNvbGlkICNhYWFhYWE7ZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NDk2cHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7IiAgICAgID4gICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzowO3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjBweDsiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICA8dHI+ICAgICAgICAgICAgPHRkICBzdHlsZT0id2lkdGg6NDk2cHg7Ij4gICAgICAgICAgICAgICAgICAgIDxpbWcgICAgICAgICBoZWlnaHQ9ImF1dG8iIHNyYz0iaHR0cHM6Ly92aWEucGxhY2Vob2xkZXIuY29tLzM1MHgyNTAvNzhjNWQ2L2ZmZiIgc3R5bGU9ImJvcmRlcjowO2Rpc3BsYXk6YmxvY2s7b3V0bGluZTpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO2hlaWdodDphdXRvO3dpZHRoOjEwMCU7Zm9udC1zaXplOjEzcHg7IiB3aWR0aD0iNDk2IiAgICAgIC8+ICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgIDwvdHI+ICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4gICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgPC90cj4gICAgICAgICAgPC90Ym9keT4gICAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PC90ZD48L3RyPjx0cj48dGQgY2xhc3M9IiIgd2lkdGg9IjYwMHB4IiA+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0iIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDo1MzhweDsiIHdpZHRoPSI1MzgiID48dHI+PHRkIHN0eWxlPSJsaW5lLWhlaWdodDowcHg7Zm9udC1zaXplOjBweDttc28tbGluZS1oZWlnaHQtcnVsZTpleGFjdGx5OyI+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgIDxkaXYgIHN0eWxlPSJtYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjUzOHB4OyI+ICAgICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgICAgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjEwMCU7IiAgICAgICAgPiAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLWJvdHRvbToxcHggc29saWQgI2FhYWFhYTtib3JkZXItbGVmdDoxcHggc29saWQgI2FhYWFhYTtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNhYWFhYWE7ZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweDt0ZXh0LWFsaWduOmNlbnRlcjsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSByb2xlPSJwcmVzZW50YXRpb24iIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj48dHI+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6NDk2cHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcGVyLTEwMCBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7IiAgICAgID4gICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJib3JkZXI6MXB4IHNvbGlkICNkZGRkZGQ7dmVydGljYWwtYWxpZ246dG9wOyIgd2lkdGg9IjEwMCUiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICAgIGFsaWduPSJsZWZ0IiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjIwcHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBzdHlsZT0iZm9udC1mYW1pbHk6VWJ1bnR1LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZToxM3B4O2xpbmUtaGVpZ2h0OjE7dGV4dC1hbGlnbjpsZWZ0O2NvbG9yOiMwMDAwMDA7IiAgICAgID5GaXJzdCBsaW5lIG9mIHRleHQ8L2Rpdj4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzowIDIwcHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDxwICAgICAgICAgc3R5bGU9ImJvcmRlci10b3A6ZGFzaGVkIDFweCBsaWdodGdyZXk7Zm9udC1zaXplOjFweDttYXJnaW46MHB4IGF1dG87d2lkdGg6MTAwJTsiICAgICAgPiAgICAgIDwvcD4gICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJib3JkZXItdG9wOmRhc2hlZCAxcHggbGlnaHRncmV5O2ZvbnQtc2l6ZToxcHg7bWFyZ2luOjBweCBhdXRvO3dpZHRoOjQ1NHB4OyIgcm9sZT0icHJlc2VudGF0aW9uIiB3aWR0aD0iNDU0cHgiID48dHI+PHRkIHN0eWxlPSJoZWlnaHQ6MDtsaW5lLWhlaWdodDowOyI+ICZuYnNwOzwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICA8L3RyPiAgICAgICAgICA8L3Rib2R5PiAgICAgICAgPC90YWJsZT4gICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4gICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgPC90cj4gICAgICAgICAgPC90Ym9keT4gICAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+ICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDEiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQyIiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0MyIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDQiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQ1IiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0NiIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjwvZGl2PjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0MSIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDIiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQzIiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PGltZyBzcmM9Imh0dHBzOi8vc291cmNlLnVuc3BsYXNoLmNvbS9yYW5kb20vMjAweDE0NCIgYWx0PSJFeGFtcGxlIGltYWdlIiBjbGFzcz0iaXRlbSIvPjxpbWcgc3JjPSJodHRwczovL3NvdXJjZS51bnNwbGFzaC5jb20vcmFuZG9tLzIwMHgxNDUiIGFsdD0iRXhhbXBsZSBpbWFnZSIgY2xhc3M9Iml0ZW0iLz48aW1nIHNyYz0iaHR0cHM6Ly9zb3VyY2UudW5zcGxhc2guY29tL3JhbmRvbS8yMDB4MTQ2IiBhbHQ9IkV4YW1wbGUgaW1hZ2UiIGNsYXNzPSJpdGVtIi8+PC9kaXY+ICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBjbGFzcz0iIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ3aWR0aDo2MDBweDsiIHdpZHRoPSI2MDAiIGJnY29sb3I9IndoaXRlIiA+PHRyPjx0ZCBzdHlsZT0ibGluZS1oZWlnaHQ6MHB4O2ZvbnQtc2l6ZTowcHg7bXNvLWxpbmUtaGVpZ2h0LXJ1bGU6ZXhhY3RseTsiPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgICA8ZGl2ICBzdHlsZT0iYmFja2dyb3VuZDp3aGl0ZTtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO21hcmdpbjowcHggYXV0bzttYXgtd2lkdGg6NjAwcHg7Ij4gICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYmFja2dyb3VuZDp3aGl0ZTtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO3dpZHRoOjEwMCU7IiAgICAgICAgPiAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICBzdHlsZT0iZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweCAwO3RleHQtYWxpZ246Y2VudGVyOyIgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIHJvbGU9InByZXNlbnRhdGlvbiIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPjx0cj48dGQgY2xhc3M9IiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDozMDBweDsiID48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgICA8ZGl2ICAgICAgICAgY2xhc3M9Im1qLWNvbHVtbi1wZXItNTAgbWotb3V0bG9vay1ncm91cC1maXgiIHN0eWxlPSJmb250LXNpemU6MHB4O3RleHQtYWxpZ246bGVmdDtkaXJlY3Rpb246bHRyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoxMDAlOyIgICAgICA+ICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wOyIgd2lkdGg9IjEwMCUiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjBweDsiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICA8dHI+ICAgICAgICAgICAgPHRkICBzdHlsZT0id2lkdGg6MjAwcHg7Ij4gICAgICAgICAgICAgICAgICAgIDxpbWcgICAgICAgICBoZWlnaHQ9ImF1dG8iIHNyYz0iaHR0cHM6Ly9kZXNpZ25zcGVsbC5maWxlcy53b3JkcHJlc3MuY29tLzIwMTIvMDEvc2Npb2xpbm8tcGFyaXMtYncuanBnIiBzdHlsZT0iYm9yZGVyOjA7ZGlzcGxheTpibG9jaztvdXRsaW5lOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7aGVpZ2h0OmF1dG87d2lkdGg6MTAwJTtmb250LXNpemU6MTNweDsiIHdpZHRoPSIyMDAiICAgICAgLz4gICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgPC90cj4gICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MzAwcHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcGVyLTUwIG1qLW91dGxvb2stZ3JvdXAtZml4IiBzdHlsZT0iZm9udC1zaXplOjBweDt0ZXh0LWFsaWduOmxlZnQ7ZGlyZWN0aW9uOmx0cjtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MTAwJTsiICAgICAgPiAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDsiIHdpZHRoPSIxMDAlIiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0ibGVmdCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBzdHlsZT0iZm9udC1mYW1pbHk6SGVsdmV0aWNhIE5ldWU7Zm9udC1zaXplOjIwcHg7Zm9udC1zdHlsZTppdGFsaWM7bGluZS1oZWlnaHQ6MTt0ZXh0LWFsaWduOmxlZnQ7Y29sb3I6IzYyNjI2MjsiICAgICAgPkZpbmQgYW1hemluZyBwbGFjZXM8L2Rpdj4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgICAgYWxpZ249ImxlZnQiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2ICAgICAgICAgc3R5bGU9ImZvbnQtZmFtaWx5OlVidW50dSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtmb250LXNpemU6MTNweDtsaW5lLWhlaWdodDoxO3RleHQtYWxpZ246bGVmdDtjb2xvcjojNTI1MjUyOyIgICAgICA+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gUHJvaW4gcnV0cnVtIGVuaW0gZWdldCBtYWduYSBlZmZpY2l0dXIsIGV1IHNlbXBlciBhdWd1ZSBzZW1wZXIuIEFsaXF1YW0gZXJhdCB2b2x1dHBhdC4gQ3JhcyBpZCBkdWkgbGVjdHVzLiBWZXN0aWJ1bHVtIHNlZCBmaW5pYnVzIGxlY3R1cy48L2Rpdj4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICA8L3RyPiAgICAgICAgICA8L3Rib2R5PiAgICAgICAgPC90YWJsZT4gICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48dGFibGUgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIGNsYXNzPSIiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9IndpZHRoOjYwMHB4OyIgd2lkdGg9IjYwMCIgYmdjb2xvcj0iI2ZiZmJmYiIgPjx0cj48dGQgc3R5bGU9ImxpbmUtaGVpZ2h0OjBweDtmb250LXNpemU6MHB4O21zby1saW5lLWhlaWdodC1ydWxlOmV4YWN0bHk7Ij48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgPGRpdiAgc3R5bGU9ImJhY2tncm91bmQ6I2ZiZmJmYjtiYWNrZ3JvdW5kLWNvbG9yOiNmYmZiZmI7bWFyZ2luOjBweCBhdXRvO21heC13aWR0aDo2MDBweDsiPiAgICAgICAgICAgICAgICA8dGFibGUgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJiYWNrZ3JvdW5kOiNmYmZiZmI7YmFja2dyb3VuZC1jb2xvcjojZmJmYmZiO3dpZHRoOjEwMCU7IiAgICAgICAgPiAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICBzdHlsZT0iZGlyZWN0aW9uOmx0cjtmb250LXNpemU6MHB4O3BhZGRpbmc6MjBweCAwO3RleHQtYWxpZ246Y2VudGVyOyIgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PHRhYmxlIHJvbGU9InByZXNlbnRhdGlvbiIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPjx0cj48dGQgY2xhc3M9IiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoyMDBweDsiID48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgICA8ZGl2ICAgICAgICAgY2xhc3M9Im1qLWNvbHVtbi1wZXItMzMtMzMzMzMzMzMzMzMzMzM2IG1qLW91dGxvb2stZ3JvdXAtZml4IiBzdHlsZT0iZm9udC1zaXplOjBweDt0ZXh0LWFsaWduOmxlZnQ7ZGlyZWN0aW9uOmx0cjtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MTAwJTsiICAgICAgPiAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9InZlcnRpY2FsLWFsaWduOnRvcDsiIHdpZHRoPSIxMDAlIiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBzdHlsZT0iZm9udC1zaXplOjBweDtwYWRkaW5nOjEwcHggMjVweDt3b3JkLWJyZWFrOmJyZWFrLXdvcmQ7IiAgICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJvcmRlci1jb2xsYXBzZTpjb2xsYXBzZTtib3JkZXItc3BhY2luZzowcHg7IiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgPHRyPiAgICAgICAgICAgIDx0ZCAgc3R5bGU9IndpZHRoOjEwMHB4OyI+ICAgICAgICAgICAgICAgICAgICA8aW1nICAgICAgICAgaGVpZ2h0PSJhdXRvIiBzcmM9Ii8vMTkxbi5tai5hbS9pbWcvMTkxbi8zcy94MGwucG5nIiBzdHlsZT0iYm9yZGVyOjA7ZGlzcGxheTpibG9jaztvdXRsaW5lOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7aGVpZ2h0OmF1dG87d2lkdGg6MTAwJTtmb250LXNpemU6MTNweDsiIHdpZHRoPSIxMDAiICAgICAgLz4gICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgPC90cj4gICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PHRkIGNsYXNzPSIiIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7d2lkdGg6MjAwcHg7IiA+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICAgICAgPGRpdiAgICAgICAgIGNsYXNzPSJtai1jb2x1bW4tcGVyLTMzLTMzMzMzMzMzMzMzMzMzNiBtai1vdXRsb29rLWdyb3VwLWZpeCIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7dGV4dC1hbGlnbjpsZWZ0O2RpcmVjdGlvbjpsdHI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjEwMCU7IiAgICAgID4gICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjp0b3A7IiB3aWR0aD0iMTAwJSIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIgc3R5bGU9ImZvbnQtc2l6ZTowcHg7cGFkZGluZzoxMHB4IDI1cHg7d29yZC1icmVhazpicmVhay13b3JkOyIgICAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ym9yZGVyLXNwYWNpbmc6MHB4OyIgICAgICA+ICAgICAgICA8dGJvZHk+ICAgICAgICAgIDx0cj4gICAgICAgICAgICA8dGQgIHN0eWxlPSJ3aWR0aDoxMDBweDsiPiAgICAgICAgICAgICAgICAgICAgPGltZyAgICAgICAgIGhlaWdodD0iYXV0byIgc3JjPSIvLzE5MW4ubWouYW0vaW1nLzE5MW4vM3MveDAxLnBuZyIgc3R5bGU9ImJvcmRlcjowO2Rpc3BsYXk6YmxvY2s7b3V0bGluZTpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO2hlaWdodDphdXRvO3dpZHRoOjEwMCU7Zm9udC1zaXplOjEzcHg7IiB3aWR0aD0iMTAwIiAgICAgIC8+ICAgICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgIDwvdHI+ICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjx0ZCBjbGFzcz0iIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjIwMHB4OyIgPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBjbGFzcz0ibWotY29sdW1uLXBlci0zMy0zMzMzMzMzMzMzMzMzMzYgbWotb3V0bG9vay1ncm91cC1maXgiIHN0eWxlPSJmb250LXNpemU6MHB4O3RleHQtYWxpZ246bGVmdDtkaXJlY3Rpb246bHRyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoxMDAlOyIgICAgICA+ICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wOyIgd2lkdGg9IjEwMCUiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjBweDsiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICA8dHI+ICAgICAgICAgICAgPHRkICBzdHlsZT0id2lkdGg6MTAwcHg7Ij4gICAgICAgICAgICAgICAgICAgIDxpbWcgICAgICAgICBoZWlnaHQ9ImF1dG8iIHNyYz0iLy8xOTFuLm1qLmFtL2ltZy8xOTFuLzNzL3gwcy5wbmciIHN0eWxlPSJib3JkZXI6MDtkaXNwbGF5OmJsb2NrO291dGxpbmU6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtoZWlnaHQ6YXV0bzt3aWR0aDoxMDAlO2ZvbnQtc2l6ZToxM3B4OyIgd2lkdGg9IjEwMCIgICAgICAvPiAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICA8L3RyPiAgICAgICAgPC90Ym9keT4gICAgICA8L3RhYmxlPiAgICAgICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgIDwvdHI+ICAgICAgICAgIDwvdGJvZHk+ICAgICAgICA8L3RhYmxlPiAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PC90cj48L3RhYmxlPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgY2xhc3M9IiIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0id2lkdGg6NjAwcHg7IiB3aWR0aD0iNjAwIiBiZ2NvbG9yPSIjZTdlN2U3IiA+PHRyPjx0ZCBzdHlsZT0ibGluZS1oZWlnaHQ6MHB4O2ZvbnQtc2l6ZTowcHg7bXNvLWxpbmUtaGVpZ2h0LXJ1bGU6ZXhhY3RseTsiPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgICA8ZGl2ICBzdHlsZT0iYmFja2dyb3VuZDojZTdlN2U3O2JhY2tncm91bmQtY29sb3I6I2U3ZTdlNzttYXJnaW46MHB4IGF1dG87bWF4LXdpZHRoOjYwMHB4OyI+ICAgICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgICAgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJhY2tncm91bmQ6I2U3ZTdlNztiYWNrZ3JvdW5kLWNvbG9yOiNlN2U3ZTc7d2lkdGg6MTAwJTsiICAgICAgICA+ICAgICAgICAgIDx0Ym9keT4gICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICA8dGQgICAgICAgICAgICAgICAgIHN0eWxlPSJkaXJlY3Rpb246bHRyO2ZvbnQtc2l6ZTowcHg7cGFkZGluZzoyMHB4IDA7dGV4dC1hbGlnbjpjZW50ZXI7IiAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48dGFibGUgcm9sZT0icHJlc2VudGF0aW9uIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+PHRyPjx0ZCBjbGFzcz0iIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wO3dpZHRoOjYwMHB4OyIgPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgICAgIDxkaXYgICAgICAgICBjbGFzcz0ibWotY29sdW1uLXBlci0xMDAgbWotb3V0bG9vay1ncm91cC1maXgiIHN0eWxlPSJmb250LXNpemU6MHB4O3RleHQtYWxpZ246bGVmdDtkaXJlY3Rpb246bHRyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO3ZlcnRpY2FsLWFsaWduOnRvcDt3aWR0aDoxMDAlOyIgICAgICA+ICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0idmVydGljYWwtYWxpZ246dG9wOyIgd2lkdGg9IjEwMCUiICAgICAgPiAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIHZlcnRpY2FsLWFsaWduPSJtaWRkbGUiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICA8dGFibGUgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOnNlcGFyYXRlO2xpbmUtaGVpZ2h0OjEwMCU7IiAgICAgID4gICAgICAgIDx0Ym9keT4gICAgICAgICAgPHRyPiAgICAgICAgICAgIDx0ZCAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIGJnY29sb3I9IiM0MTQxNDEiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJvcmRlcjpub25lO2JvcmRlci1yYWRpdXM6M3B4O2N1cnNvcjphdXRvO21zby1wYWRkaW5nLWFsdDoxMHB4IDI1cHg7YmFja2dyb3VuZDojNDE0MTQxOyIgdmFsaWduPSJtaWRkbGUiICAgICAgICAgICAgPiAgICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgIGhyZWY9IiMiIHN0eWxlPSJkaXNwbGF5OmlubGluZS1ibG9jaztiYWNrZ3JvdW5kOiM0MTQxNDE7Y29sb3I6I2ZmZmZmZjtmb250LWZhbWlseTpVYnVudHUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7Zm9udC1zaXplOjEzcHg7Zm9udC13ZWlnaHQ6bm9ybWFsO2xpbmUtaGVpZ2h0OjEyMCU7bWFyZ2luOjA7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC10cmFuc2Zvcm06bm9uZTtwYWRkaW5nOjEwcHggMjVweDttc28tcGFkZGluZy1hbHQ6MHB4O2JvcmRlci1yYWRpdXM6M3B4OyIgdGFyZ2V0PSJfYmxhbmsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIEhlbGxvIFRoZXJlISAgICAgICAgICAgICAgPC9hPiAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgIDwvdHI+ICAgICAgICA8L3Rib2R5PiAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIHN0eWxlPSJmb250LXNpemU6MHB4O3BhZGRpbmc6MTBweCAyNXB4O3dvcmQtYnJlYWs6YnJlYWstd29yZDsiICAgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjx0YWJsZSBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiA+PHRyPjx0ZD48IVtlbmRpZl0tLT4gICAgICAgICAgICAgIDx0YWJsZSAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImZsb2F0Om5vbmU7ZGlzcGxheTppbmxpbmUtdGFibGU7IiAgICAgICAgICAgICAgPiAgICAgICAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgICAgICAgICAgICAgPHRyICAgICAgICAgICAgICA+ICAgICAgICA8dGQgIHN0eWxlPSJwYWRkaW5nOjRweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Ij4gICAgICAgICAgPHRhYmxlICAgICAgICAgICAgIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJiYWNrZ3JvdW5kOiMzYjU5OTg7Ym9yZGVyLXJhZGl1czozcHg7d2lkdGg6MzBweDsiICAgICAgICAgID4gICAgICAgICAgICA8dGJvZHk+ICAgICAgICAgICAgICA8dHI+ICAgICAgICAgICAgICAgIDx0ZCAgc3R5bGU9ImZvbnQtc2l6ZTowO2hlaWdodDozMHB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTt3aWR0aDozMHB4OyI+ICAgICAgICAgICAgICAgICAgPGEgIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9zaGFyZXIvc2hhcmVyLnBocD91PWh0dHBzOi8vbWptbC5pby8iIHRhcmdldD0iX2JsYW5rIj4gICAgICAgICAgICAgICAgICAgIDxpbWcgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMzAiIHNyYz0iaHR0cHM6Ly93d3cubWFpbGpldC5jb20vaW1hZ2VzL3RoZW1lL3YxL2ljb25zL2ljby1zb2NpYWwvZmFjZWJvb2sucG5nIiBzdHlsZT0iYm9yZGVyLXJhZGl1czozcHg7ZGlzcGxheTpibG9jazsiIHdpZHRoPSIzMCIgICAgICAgICAgICAgICAgICAgIC8+ICAgICAgICAgICAgICAgICAgPC9hPiAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICA8L3Rib2R5PiAgICAgICAgICA8L3RhYmxlPiAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgICA8dGQgIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Ij4gICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci9zaGFyZXIucGhwP3U9aHR0cHM6Ly9tam1sLmlvLyIgc3R5bGU9ImNvbG9yOiMzMzMzMzM7Zm9udC1zaXplOjE1cHg7Zm9udC1mYW1pbHk6VWJ1bnR1LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2xpbmUtaGVpZ2h0OjIycHg7dGV4dC1kZWNvcmF0aW9uOm5vbmU7IiB0YXJnZXQ9Il9ibGFuayI+ICAgICAgICAgICAgICBGYWNlYm9vayAgICAgICAgICAgIDwvYT4gICAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+ICAgICAgICAgICAgICA8L3RhYmxlPiAgICAgICAgICAgIDwhLS1baWYgbXNvIHwgSUVdPjwvdGQ+PHRkPjwhW2VuZGlmXS0tPiAgICAgICAgICAgICAgPHRhYmxlICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIiBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iZmxvYXQ6bm9uZTtkaXNwbGF5OmlubGluZS10YWJsZTsiICAgICAgICAgICAgICA+ICAgICAgICAgICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgICAgICAgICAgICA8dHIgICAgICAgICAgICAgID4gICAgICAgIDx0ZCAgc3R5bGU9InBhZGRpbmc6NHB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTsiPiAgICAgICAgICA8dGFibGUgICAgICAgICAgICAgYm9yZGVyPSIwIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHJvbGU9InByZXNlbnRhdGlvbiIgc3R5bGU9ImJhY2tncm91bmQ6I2RjNGU0MTtib3JkZXItcmFkaXVzOjNweDt3aWR0aDozMHB4OyIgICAgICAgICAgPiAgICAgICAgICAgIDx0Ym9keT4gICAgICAgICAgICAgIDx0cj4gICAgICAgICAgICAgICAgPHRkICBzdHlsZT0iZm9udC1zaXplOjA7aGVpZ2h0OjMwcHg7dmVydGljYWwtYWxpZ246bWlkZGxlO3dpZHRoOjMwcHg7Ij4gICAgICAgICAgICAgICAgICA8YSAgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vc2hhcmU/dXJsPWh0dHBzOi8vbWptbC5pby8iIHRhcmdldD0iX2JsYW5rIj4gICAgICAgICAgICAgICAgICAgIDxpbWcgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMzAiIHNyYz0iaHR0cHM6Ly93d3cubWFpbGpldC5jb20vaW1hZ2VzL3RoZW1lL3YxL2ljb25zL2ljby1zb2NpYWwvZ29vZ2xlLXBsdXMucG5nIiBzdHlsZT0iYm9yZGVyLXJhZGl1czozcHg7ZGlzcGxheTpibG9jazsiIHdpZHRoPSIzMCIgICAgICAgICAgICAgICAgICAgIC8+ICAgICAgICAgICAgICAgICAgPC9hPiAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICA8L3Rib2R5PiAgICAgICAgICA8L3RhYmxlPiAgICAgICAgPC90ZD4gICAgICAgICAgICAgICAgICA8dGQgIHN0eWxlPSJ2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7Ij4gICAgICAgICAgICA8YSAgICAgICAgICAgICAgICAgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vc2hhcmU/dXJsPWh0dHBzOi8vbWptbC5pby8iIHN0eWxlPSJjb2xvcjojMzMzMzMzO2ZvbnQtc2l6ZToxNXB4O2ZvbnQtZmFtaWx5OlVidW50dSwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtsaW5lLWhlaWdodDoyMnB4O3RleHQtZGVjb3JhdGlvbjpub25lOyIgdGFyZ2V0PSJfYmxhbmsiPiAgICAgICAgICAgICAgR29vZ2xlICAgICAgICAgICAgPC9hPiAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgICA8L3RyPiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4gICAgICAgICAgICAgIDwvdGFibGU+ICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48dGQ+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICA8dGFibGUgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiByb2xlPSJwcmVzZW50YXRpb24iIHN0eWxlPSJmbG9hdDpub25lO2Rpc3BsYXk6aW5saW5lLXRhYmxlOyIgICAgICAgICAgICAgID4gICAgICAgICAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgICAgICAgICAgIDx0ciAgICAgICAgICAgICAgPiAgICAgICAgPHRkICBzdHlsZT0icGFkZGluZzo0cHg7dmVydGljYWwtYWxpZ246bWlkZGxlOyI+ICAgICAgICAgIDx0YWJsZSAgICAgICAgICAgICBib3JkZXI9IjAiIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgcm9sZT0icHJlc2VudGF0aW9uIiBzdHlsZT0iYmFja2dyb3VuZDojNTVhY2VlO2JvcmRlci1yYWRpdXM6M3B4O3dpZHRoOjMwcHg7IiAgICAgICAgICA+ICAgICAgICAgICAgPHRib2R5PiAgICAgICAgICAgICAgPHRyPiAgICAgICAgICAgICAgICA8dGQgIHN0eWxlPSJmb250LXNpemU6MDtoZWlnaHQ6MzBweDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6MzBweDsiPiAgICAgICAgICAgICAgICAgIDxhICBocmVmPSJodHRwczovL3R3aXR0ZXIuY29tL2ludGVudC90d2VldD91cmw9aHR0cHM6Ly9tam1sLmlvLyIgdGFyZ2V0PSJfYmxhbmsiPiAgICAgICAgICAgICAgICAgICAgPGltZyAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIzMCIgc3JjPSJodHRwczovL3d3dy5tYWlsamV0LmNvbS9pbWFnZXMvdGhlbWUvdjEvaWNvbnMvaWNvLXNvY2lhbC90d2l0dGVyLnBuZyIgc3R5bGU9ImJvcmRlci1yYWRpdXM6M3B4O2Rpc3BsYXk6YmxvY2s7IiB3aWR0aD0iMzAiICAgICAgICAgICAgICAgICAgICAvPiAgICAgICAgICAgICAgICAgIDwvYT4gICAgICAgICAgICAgICAgPC90ZD4gICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgPC90Ym9keT4gICAgICAgICAgPC90YWJsZT4gICAgICAgIDwvdGQ+ICAgICAgICAgICAgICAgICAgPHRkICBzdHlsZT0idmVydGljYWwtYWxpZ246bWlkZGxlOyI+ICAgICAgICAgICAgPGEgICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3VybD1odHRwczovL21qbWwuaW8vIiBzdHlsZT0iY29sb3I6IzMzMzMzMztmb250LXNpemU6MTVweDtmb250LWZhbWlseTpVYnVudHUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7bGluZS1oZWlnaHQ6MjJweDt0ZXh0LWRlY29yYXRpb246bm9uZTsiIHRhcmdldD0iX2JsYW5rIj4gICAgICAgICAgICAgIFR3aXR0ZXIgICAgICAgICAgICA8L2E+ICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgICAgIDwvdHI+ICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PiAgICAgICAgICAgICAgPC90YWJsZT4gICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4gICAgICAgICAgICAgICAgICAgICAgICA8L3RkPiAgICAgICAgICAgICAgPC90cj4gICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+ICAgICAgPC90YWJsZT4gICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICA8IS0tW2lmIG1zbyB8IElFXT48L3RkPjwvdHI+PC90YWJsZT48IVtlbmRpZl0tLT4gICAgICAgICAgICAgIDwvdGQ+ICAgICAgICAgICAgPC90cj4gICAgICAgICAgPC90Ym9keT4gICAgICAgIDwvdGFibGU+ICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgPCEtLVtpZiBtc28gfCBJRV0+PC90ZD48L3RyPjwvdGFibGU+PCFbZW5kaWZdLS0+ICAgICAgICAgICAgICA8L2Rpdj4gICAgICA8L2JvZHk+PC9odG1sPiAg', '', '', '', '', '2025-02-16 10:01:50');

-- --------------------------------------------------------

--
-- Table structure for table `emails_prueba`
--

CREATE TABLE `emails_prueba` (
  `id` tinyint(4) NOT NULL,
  `email` varchar(500) NOT NULL,
  `fecha` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `emails_prueba`
--

INSERT INTO `emails_prueba` (`id`, `email`, `fecha`) VALUES
(1, 'devmilitia@gmail.com', '2025-02-16 10:11:19'),
(2, 'graphixx.roninnovation@gmail.com', '2022-10-28 13:05:33'),
(3, 'd3vmafia@gmail.com', '2025-02-16 10:12:08'),
(4, 'carlos.bigdata.medellin@gmail.com', '2025-02-16 10:12:08');

-- --------------------------------------------------------

--
-- Table structure for table `nube`
--

CREATE TABLE `nube` (
  `id` int(5) NOT NULL,
  `nombre` varchar(300) DEFAULT NULL,
  `url` varchar(300) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Dumping data for table `nube`
--

INSERT INTO `nube` (`id`, `nombre`, `url`) VALUES
(1, '11131488', 'https://i.imgur.com/zQsJ7cv.jpg'),
(2, 'programador', 'https://i.imgur.com/k7jctGr.jpg'),
(3, 'imagen', 'https://i.imgur.com/TyiC8gK.jpg'),
(4, 'imagen', 'https://i.imgur.com/LLovRwB.jpg'),
(5, 'contador', 'http://i.countdownmail.com/3wbzh.gif'),
(6, 'imagen', 'https://i.imgur.com/DLqdFfC.jpeg');

-- --------------------------------------------------------

--
-- Table structure for table `smtp`
--

CREATE TABLE `smtp` (
  `id` tinyint(4) NOT NULL,
  `hostname` varchar(500) NOT NULL,
  `username` varchar(500) NOT NULL,
  `password` varchar(500) NOT NULL,
  `port` varchar(4) NOT NULL,
  `from_email` varchar(500) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;


-- --------------------------------------------------------

--
-- Table structure for table `usuarios`
--

CREATE TABLE `usuarios` (
  `id` tinyint(4) NOT NULL,
  `usuario` varchar(50) NOT NULL,
  `clave` varchar(500) NOT NULL,
  `ip` varchar(15) NOT NULL,
  `permiso` char(1) NOT NULL,
  `fecha` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COLLATE=latin1_swedish_ci;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `admin`
--
ALTER TABLE `admin`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `editores`
--
ALTER TABLE `editores`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `emails_prueba`
--
ALTER TABLE `emails_prueba`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `nube`
--
ALTER TABLE `nube`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `smtp`
--
ALTER TABLE `smtp`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `usuarios`
--
ALTER TABLE `usuarios`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `admin`
--
ALTER TABLE `admin`
  MODIFY `id` tinyint(4) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `editores`
--
ALTER TABLE `editores`
  MODIFY `id` int(7) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `emails_prueba`
--
ALTER TABLE `emails_prueba`
  MODIFY `id` tinyint(4) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `nube`
--
ALTER TABLE `nube`
  MODIFY `id` int(5) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT for table `smtp`
--
ALTER TABLE `smtp`
  MODIFY `id` tinyint(4) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `usuarios`
--
ALTER TABLE `usuarios`
  MODIFY `id` tinyint(4) NOT NULL AUTO_INCREMENT;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
